module Mnd
  class Commands::Bundle < Commands::Base
    summary "Create bundle update pull requests"
    usage <<-EOF
      mnd bundle mynewsdesk # bundle update and pull request for mynewsdesk
    EOF

    PRETTY_GEM_DIFF_PATH = "#{__DIR__}/../../../bin/pretty-gem-diff"

    def perform
      verify_repos_provided!
      verify_repos_installed!
      verify_hub_installed!

      unless File.exists? PRETTY_GEM_DIFF_PATH
        display.error "Couldn't find the pretty-gem-diff executable in #{PRETTY_GEM_DIFF_PATH}"
        exit
      end

      repos = selected_repos

      Utils::Git.verify_clean_repos!(repos)

      Repo.in_each(repos) do
        next unless File.exists?("Gemfile.lock")

        run "git checkout master"
        run "git branch -D bundle-update"
        run "git checkout -b bundle-update"
        run "bundle update"

        message = generate_message

        run "git add Gemfile Gemfile.lock"
        run "git commit -m \"#{message}\""
        run "git push -f"

        run "hub pull-request -F - <<EOF#{message}"

        display.info ""
        display.info "============================================".colorize(:light_green)
        display.info "Pull request created -^".colorize(:light_green)
        display.info "============================================".colorize(:light_green)
        display.info ""

        run "git checkout master"
      end

      display.info "Pull requests created. Find links above anda read through"
      display.info "version changes and take action if specs fail or action is needed."
    end

    private def generate_message
      diff = `#{PRETTY_GEM_DIFF_PATH}`

      %(
Bundle update

[generated by mnd]

```
#{diff}
```
      )
    end

    private def verify_hub_installed!
      return if system("hub --help > /dev/null")

      display.warn "Hub not installed, attempting brew install"
      run "brew install hub"

      unless system("hub --help > /dev/null")
        display.error "Failed to install hub, please install it manually "
        exit
      end
    end
  end
end
